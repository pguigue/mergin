server {
	listen 443 ssl http2;
	# use the certificates
	ssl_certificate     /etc/letsencrypt/live/mergin.waldplan.de/fullchain.pem;
	ssl_certificate_key /etc/letsencrypt/live/mergin.waldplan.de/privkey.pem;
	server_name mergin.waldplan.de;


	client_max_body_size 4G;

   # path for static files
   # root /path/to/app/current/public;
   # We are only proxying - not returning any files
   #root /dev/null;

   # allow letsencrypt to do its challenge thing
   location ~ /.well-known/acme-challenge/ {
		 root /var/www/certbot;
   }

   location / {
		 proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
		 proxy_set_header X-Forwarded-Proto $scheme;
		 proxy_set_header Host $http_host;
		 # we don't want nginx trying to do something clever with
		 # redirects, we set the Host: header above already.
		 proxy_redirect off;
		 proxy_pass http://merginmaps-web;
   }

   # proxy to backend
   # we need to disable buffering for these endpoints which use stream (up or down)
   # /v1/project/download/
   location ~ /v1/project/download/ {
		 # unfortunately, proxy settings do not support inheritance within nested locations, hence copied set up from root location
		 proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
		 proxy_set_header X-Forwarded-Proto $scheme;
		 proxy_set_header Host $http_host;
		 # we don't want nginx trying to do something clever with
		 # redirects, we set the Host: header above already.
		 proxy_redirect off;
		 proxy_pass   http://merginmaps-server:5000;

		 # disable buffering
		 client_max_body_size 0; # No maximum client body size
		 proxy_http_version 1.1; # Needed to disable client buffering
		 proxy_request_buffering off;
		 proxy_buffering off;
   }

   location ~ ^/(v1/|app/|ping|config) {
		 proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
		 proxy_set_header X-Forwarded-Proto $scheme;
		 proxy_set_header Host $http_host;
		 proxy_pass http://merginmaps-server:5000;
   }

   location /download/ {
		 internal;
		 alias   /data; # we need to mount data from mergin server here
   }
}
	
server {
   listen 80;
   listen [::]:80;
   server_name _;

   client_max_body_size 4G;

   # path for static files
   # root /path/to/app/current/public;
   # We are only proxying - not returning any files
   #root /dev/null;
   }
}
